{
    "{7BBAF6F9-0CBF-4752-AE3D-FF47957F843B}": {
        "source": "module.exports = require( '/src/poling' )",
        "path": "{browser}/index.js",
        "mapping": {
            "/src/poling": "{B31CA886-77D7-4456-BFE7-F2324F76A273}"
        }
    },
    "{B31CA886-77D7-4456-BFE7-F2324F76A273}": {
        "source": "const WShell = require('WScript.Shell')\r\nconst Event = require('event')\r\nconst { isRegExp, isNumber } = require('typecheck')\r\nconst { TypeName } = require('VBScript')\r\nconst { cursorHrAbs, eraseInLine } = require('ansi')\r\nconst { SPACE } = require('text')\r\nconst anime = ['|', '/', '-', '\\\\']\r\n\r\n\r\nclass Navigation extends Event {\r\n    emit(url, ...args) {\r\n        this.forEach((callback, listener) => {\r\n            if (isRegExp(listener) && listener.test(url) || listener === url) {\r\n                callback.forEach(cb => cb(url, ...args))\r\n            }\r\n        })\r\n    }\r\n}\r\nconst navigation = new Navigation\r\n\r\nconst defaultOptions = {\r\n    invisible: false,\r\n    home: 'about:blank',\r\n    complate() {\r\n        this.run = false\r\n        console.log('\\nComplate! exports: %O', this.exports)\r\n    },\r\n    expection(error) {\r\n        console.log('\\nExpection! exports: %O', this.exports)\r\n        throw error\r\n    },\r\n    exports: [],\r\n    navigation,\r\n    run: true\r\n}\r\n\r\nfunction browser (callback, options = {}) {\r\n    const status = Object.assign(defaultOptions, options)\r\n    const app = require('InternetExplorer.Application')\r\n    app.Visible = !status.invisible\r\n    app.Navigate(status.home)\r\n    let url = status.home\r\n    wait(app)\r\n    WShell.AppActivate(app.LocationName)\r\n\r\n    try {\r\n        callback(app, status)\r\n\r\n        status.document = app.Document\r\n        status.window = app.Document.parentWindow\r\n        navigation.emit(url, status)\r\n\r\n        let count = 0\r\n        while ( status.run ) {\r\n            wait(app)\r\n            if (url === app.LocationURL) {\r\n                console.print(cursorHrAbs(1) + anime[count % 4] + SPACE + 'polling')\r\n                count++\r\n                WScript.Sleep(100)\r\n            } else {\r\n                console.print(cursorHrAbs(1) + eraseInLine(2))\r\n                url = app.LocationURL\r\n                status.document = app.Document\r\n                status.window = app.Document.parentWindow\r\n                navigation.emit(url, status)\r\n            }\r\n        }\r\n    } catch (error) {\r\n        status.expection(error)\r\n    } finally {\r\n        if(browserExist(app)) app.Quit()\r\n    }\r\n}\r\n\r\nmodule.exports = browser\r\n\r\n// util\r\nfunction browserExist (app) {\r\n  return app != null && TypeName(app) === 'IWebBrowser2'\r\n}\r\n\r\nfunction wait(app) {\r\n    if (app == null) return showWait(2000)\r\n    if (browserExist(app)) return showReadyState(app)\r\n    if (isNumber(app)) return showWait(app)\r\n}\r\n\r\nfunction showReadyState (app) {\r\n    const state = [\"uninitialized\",\"loading\",\"loaded\",\"interactive\",\"complete\"]\r\n    let count = 0\r\n    while (app.Busy || app.readystate < 4) {\r\n        console.print(cursorHrAbs(1) + anime[count % 4] + SPACE + state[app.readystate])\r\n        WScript.Sleep(100)\r\n        count++\r\n    }\r\n    console.print(cursorHrAbs(1) + eraseInLine(2))\r\n}\r\n\r\nfunction showWait (num) {\r\n    const end = new Date().getTime() + num\r\n    let count = 0\r\n    while (new Date().getTime() < end) {\r\n        console.print(cursorHrAbs(1) + anime[count % 4] + SPACE + 'waiting')\r\n        WScript.Sleep(100)\r\n        count++\r\n    }\r\n    console.print(cursorHrAbs(1) + eraseInLine(2))\r\n}\r\n",
        "path": "{browser}/src/poling.js",
        "mapping": {}
    }
}